{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport GoalItem from \"./components/GoalItem\";\nimport GoalInput from \"./components/GoalInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      courseGoals = _useState2[0],\n      setCourseGoals = _useState2[1];\n\n  var addGoalHandler = function addGoalHandler(goalTitle) {\n    setCourseGoals(function (currentGoals) {\n      return [].concat(_toConsumableArray(currentGoals), [{\n        id: Math.random().toString(),\n        value: goalTitle\n      }]);\n    });\n  };\n\n  var removeGoalHandler = function removeGoalHandler(goalId) {\n    setCourseGoals(function (currentGoals) {\n      return currentGoals.filter(function (goal) {\n        goal.id !== goalId;\n      });\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(GoalInput, {\n      onAddGoal: addGoalHandler\n    }), _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item, index) {\n        return item.id;\n      },\n      data: courseGoals,\n      renderItem: function renderItem(itemData) {\n        return _jsx(GoalItem, {\n          title: itemData.item.value,\n          onDelete: function onDelete() {\n            removeGoalHandler(itemData.item.id);\n          }\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50\n  }\n});","map":{"version":3,"sources":["/Users/user/sec 1 setUp/App.js"],"names":["React","useState","GoalItem","GoalInput","App","courseGoals","setCourseGoals","addGoalHandler","goalTitle","currentGoals","id","Math","random","toString","value","removeGoalHandler","goalId","filter","goal","styles","screen","item","index","itemData","StyleSheet","create","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAWA,OAAOC,QAAP;AACA,OAAOC,SAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAsCH,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOI,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAe;AACpCF,IAAAA,cAAc,CAAC,UAACG,YAAD;AAAA,0CACVA,YADU,IAEb;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAN;AAAgCC,QAAAA,KAAK,EAAEN;AAAvC,OAFa;AAAA,KAAD,CAAd;AAID,GALD;;AAOA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;AACpCV,IAAAA,cAAc,CAAC,UAACG,YAAD,EAAkB;AAC/B,aAAOA,YAAY,CAACQ,MAAb,CAAoB,UAACC,IAAD,EAAU;AACnCA,QAAAA,IAAI,CAACR,EAAL,KAAYM,MAAZ;AACD,OAFM,CAAP;AAGD,KAJa,CAAd;AAKD,GAND;;AAQA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,MAApB;AAAA,eACE,KAAC,SAAD;AAAW,MAAA,SAAS,EAAEb;AAAtB,MADF,EAEE,KAAC,QAAD;AACE,MAAA,YAAY,EAAE,sBAACc,IAAD,EAAOC,KAAP;AAAA,eAAiBD,IAAI,CAACX,EAAtB;AAAA,OADhB;AAEE,MAAA,IAAI,EAAEL,WAFR;AAGE,MAAA,UAAU,EAAE,oBAACkB,QAAD;AAAA,eACV,KAAC,QAAD;AACE,UAAA,KAAK,EAAEA,QAAQ,CAACF,IAAT,CAAcP,KADvB;AAEE,UAAA,QAAQ,EAAE,oBAAM;AACdC,YAAAA,iBAAiB,CAACQ,QAAQ,CAACF,IAAT,CAAcX,EAAf,CAAjB;AACD;AAJH,UADU;AAAA;AAHd,MAFF;AAAA,IADF;AAiBD;AAED,IAAMS,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,OAAO,EAAE;AADH;AADuB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  ScrollView,\n  FlatList,\n} from \"react-native\";\n\nimport GoalItem from \"./components/GoalItem\";\nimport GoalInput from \"./components/GoalInput\";\n\nexport default function App() {\n  const [courseGoals, setCourseGoals] = useState([]);\n\n  const addGoalHandler = (goalTitle) => {\n    setCourseGoals((currentGoals) => [\n      ...currentGoals,\n      { id: Math.random().toString(), value: goalTitle },\n    ]);\n  };\n\n  const removeGoalHandler = (goalId) => {\n    setCourseGoals((currentGoals) => {\n      return currentGoals.filter((goal) => {\n        goal.id !== goalId;\n      });\n    });\n  };\n\n  return (\n    <View style={styles.screen}>\n      <GoalInput onAddGoal={addGoalHandler} />\n      <FlatList\n        keyExtractor={(item, index) => item.id}\n        data={courseGoals}\n        renderItem={(itemData) => (\n          <GoalItem\n            title={itemData.item.value}\n            onDelete={() => {\n              removeGoalHandler(itemData.item.id);\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 50,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}