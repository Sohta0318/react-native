{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport GoalItem from \"./components/GoalItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredGoal = _useState2[0],\n      setEnteredGoal = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      courseGoals = _useState4[0],\n      setCourseGoals = _useState4[1];\n\n  var goalInputHandler = function goalInputHandler(enteredText) {\n    setEnteredGoal(enteredText);\n  };\n\n  var addGoalHandler = function addGoalHandler() {\n    setCourseGoals(function (currentGoals) {\n      return [].concat(_toConsumableArray(currentGoals), [{\n        id: Math.random().toString(),\n        value: enteredGoal\n      }]);\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.screen,\n    children: _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item, index) {\n        return item.id;\n      },\n      data: courseGoals,\n      renderItem: function renderItem(itemData) {\n        return _jsx(GoalItem, {\n          title: itemData.item.value\n        });\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  input: {\n    width: \"80%\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/user/sec 1 setUp/App.js"],"names":["React","useState","GoalItem","App","enteredGoal","setEnteredGoal","courseGoals","setCourseGoals","goalInputHandler","enteredText","addGoalHandler","currentGoals","id","Math","random","toString","value","styles","screen","item","index","itemData","StyleSheet","create","padding","inputContainer","flexDirection","justifyContent","alignItems","input","width","borderColor","borderWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAWA,OAAOC,QAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAsCF,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOG,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAsCJ,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOK,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAiB;AACxCJ,IAAAA,cAAc,CAACI,WAAD,CAAd;AACD,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BH,IAAAA,cAAc,CAAC,UAACI,YAAD;AAAA,0CACVA,YADU,IAEb;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAN;AAAgCC,QAAAA,KAAK,EAAEZ;AAAvC,OAFa;AAAA,KAAD,CAAd;AAID,GALD;;AAOA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,MAApB;AAAA,cACE,KAAC,QAAD;AACE,MAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,KAAP;AAAA,eAAiBD,IAAI,CAACP,EAAtB;AAAA,OADhB;AAEE,MAAA,IAAI,EAAEN,WAFR;AAGE,MAAA,UAAU,EAAE,oBAACe,QAAD;AAAA,eAAc,KAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,QAAQ,CAACF,IAAT,CAAcH;AAA/B,UAAd;AAAA;AAHd;AADF,IADF;AASD;AAED,IAAMC,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,OAAO,EAAE;AADH,GADuB;AAI/BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,cAAc,EAAE,eAFF;AAGdC,IAAAA,UAAU,EAAE;AAHE,GAJe;AAS/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,WAAW,EAAE,OAFR;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILR,IAAAA,OAAO,EAAE;AAJJ;AATwB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  ScrollView,\n  FlatList,\n} from \"react-native\";\n\nimport GoalItem from \"./components/GoalItem\";\n\nexport default function App() {\n  const [enteredGoal, setEnteredGoal] = useState(\"\");\n  const [courseGoals, setCourseGoals] = useState([]);\n\n  const goalInputHandler = (enteredText) => {\n    setEnteredGoal(enteredText);\n  };\n\n  const addGoalHandler = () => {\n    setCourseGoals((currentGoals) => [\n      ...currentGoals,\n      { id: Math.random().toString(), value: enteredGoal },\n    ]);\n  };\n\n  return (\n    <View style={styles.screen}>\n      <FlatList\n        keyExtractor={(item, index) => item.id}\n        data={courseGoals}\n        renderItem={(itemData) => <GoalItem title={itemData.item.value} />}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 50,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  input: {\n    width: \"80%\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}