{"ast":null,"code":"import React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport ProductItem from \"../../components/shop/ProductItem\";\nimport Colors from \"../../constants/Colors\";\nimport * as productsActions from \"../../store/actions/products\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UserProductsScreen = function UserProductsScreen(props) {\n  var userProducts = useSelector(function (state) {\n    return state.products.userProducts;\n  });\n  var dispatch = useDispatch();\n\n  var editProductHandler = function editProductHandler(id) {\n    props.navigation.navigate(\"EditProduct\", {\n      productId: id\n    });\n  };\n\n  var deleteHandler = function deleteHandler(id) {\n    Alert.alert(\"Are you sure?\", \"Do you really want to delete this item?\", [{\n      text: \"No\",\n      style: \"default\"\n    }, {\n      text: \"Yes\",\n      style: \"destructive\",\n      onPress: function onPress() {\n        dispatch(productsActions.deleteProduct(id));\n      }\n    }]);\n  };\n\n  return _jsx(FlatList, {\n    data: userProducts,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return _jsxs(ProductItem, {\n        image: itemData.item.imageUrl,\n        title: itemData.item.title,\n        price: itemData.item.price,\n        onSelect: function onSelect() {\n          editProductHandler(itemData.item.id);\n        },\n        children: [_jsx(Button, {\n          color: Colors.primary,\n          title: \"Edit\",\n          onPress: function onPress() {\n            editProductHandler(itemData.item.id);\n          }\n        }), _jsx(Button, {\n          color: Colors.primary,\n          title: \"Delete\",\n          onPress: function onPress() {\n            deleteHandler(itemData.item.id);\n          }\n        })]\n      });\n    }\n  });\n};\n\nUserProductsScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: \"Your Products\",\n    headerLeft: _jsx(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      children: _jsx(Item, {\n        title: \"Menu\",\n        iconName: Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\",\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        }\n      })\n    }),\n    headerRight: _jsx(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      children: _jsx(Item, {\n        title: \"Add\",\n        iconName: Platform.OS === \"android\" ? \"md-create\" : \"ios-create\",\n        onPress: function onPress() {\n          navData.navigation.navigate(\"EditProduct\");\n        }\n      })\n    })\n  };\n};\n\nexport default UserProductsScreen;","map":{"version":3,"sources":["/Users/user/React-Native/sec 10 Http request & Adding web server + database/screens/user/UserProductsScreen.js"],"names":["React","useSelector","useDispatch","HeaderButtons","Item","HeaderButton","ProductItem","Colors","productsActions","UserProductsScreen","props","userProducts","state","products","dispatch","editProductHandler","id","navigation","navigate","productId","deleteHandler","Alert","alert","text","style","onPress","deleteProduct","item","itemData","imageUrl","title","price","primary","navigationOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FlatList, Button, Platform, Alert } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\n\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport ProductItem from \"../../components/shop/ProductItem\";\nimport Colors from \"../../constants/Colors\";\nimport * as productsActions from \"../../store/actions/products\";\n\nconst UserProductsScreen = (props) => {\n  const userProducts = useSelector((state) => state.products.userProducts);\n  const dispatch = useDispatch();\n\n  const editProductHandler = (id) => {\n    props.navigation.navigate(\"EditProduct\", { productId: id });\n  };\n\n  const deleteHandler = (id) => {\n    Alert.alert(\"Are you sure?\", \"Do you really want to delete this item?\", [\n      {\n        text: \"No\",\n        style: \"default\",\n      },\n      {\n        text: \"Yes\",\n        style: \"destructive\",\n        onPress: () => {\n          dispatch(productsActions.deleteProduct(id));\n        },\n      },\n    ]);\n  };\n\n  return (\n    <FlatList\n      data={userProducts}\n      keyExtractor={(item) => item.id}\n      renderItem={(itemData) => (\n        <ProductItem\n          image={itemData.item.imageUrl}\n          title={itemData.item.title}\n          price={itemData.item.price}\n          onSelect={() => {\n            editProductHandler(itemData.item.id);\n          }}\n        >\n          <Button\n            color={Colors.primary}\n            title=\"Edit\"\n            onPress={() => {\n              editProductHandler(itemData.item.id);\n            }}\n          />\n          <Button\n            color={Colors.primary}\n            title=\"Delete\"\n            onPress={() => {\n              deleteHandler(itemData.item.id);\n            }}\n          />\n        </ProductItem>\n      )}\n    />\n  );\n};\n\nUserProductsScreen.navigationOptions = (navData) => {\n  return {\n    headerTitle: \"Your Products\",\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName={Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\"}\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    ),\n    headerRight: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Add\"\n          iconName={Platform.OS === \"android\" ? \"md-create\" : \"ios-create\"}\n          onPress={() => {\n            navData.navigation.navigate(\"EditProduct\");\n          }}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nexport default UserProductsScreen;\n"]},"metadata":{},"sourceType":"module"}