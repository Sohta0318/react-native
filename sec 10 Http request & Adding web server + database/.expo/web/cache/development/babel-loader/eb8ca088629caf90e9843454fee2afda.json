{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useCallback, useReducer } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport Input from \"../../components/UI/Input\";\nimport * as productsActions from \"../../store/actions/products\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValues: updatedValues,\n      inputValidities: updatedValidities\n    };\n  }\n\n  return state;\n};\n\nvar EditProductScreen = function EditProductScreen(props) {\n  var prodId = props.navigation.getParam(\"productId\");\n  var editedProduct = useSelector(function (state) {\n    return state.products.userProducts.find(function (prod) {\n      return prod.id === prodId;\n    });\n  });\n  var dispatch = useDispatch();\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      title: editedProduct ? editedProduct.title : \"\",\n      imageUrl: editedProduct ? editedProduct.imageUrl : \"\",\n      description: editedProduct ? editedProduct.description : \"\",\n      price: \"\"\n    },\n    inputValidities: {\n      title: editedProduct ? true : false,\n      imageUrl: editedProduct ? true : false,\n      description: editedProduct ? true : false,\n      price: editedProduct ? true : false\n    },\n    formIsValid: editedProduct ? true : false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  var submitHandler = useCallback(function () {\n    if (!formState.formIsValid) {\n      Alert.alert(\"wrong input\", \"Please check the errors in the form.\", [{\n        text: \"Okay\"\n      }]);\n      return;\n    }\n\n    if (editedProduct) {\n      dispatch(productsActions.updateProduct(prodId, formState.inputValues.title, formState.inputValues.description, formState.inputValues.imageUrl));\n    } else {\n      dispatch(productsActions.createProduct(formState.inputValues.title, formState.inputValues.description, formState.inputValues.imageUrl, +formState.inputValues.price));\n    }\n\n    props.navigation.goBack();\n  }, [dispatch, prodId, formState]);\n  useEffect(function () {\n    props.navigation.setParams({\n      submit: submitHandler\n    });\n  }, [submitHandler]);\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Input, {\n        label: \"Title\",\n        errorText: \"Please input a valid title!\",\n        keyboardType: \"default\",\n        autoCapitalize: \"words\",\n        autoCorrect: true,\n        returnKeyType: \"next\",\n        onInputChange: inputChangeHandler.bind(_this, \"title\"),\n        initialValue: editedProduct ? editedProduct.title : \"\",\n        initiallyValid: !!editedProduct,\n        required: true\n      }), _jsx(Input, {\n        label: \"Image Url\",\n        errorText: \"Please input a valid image url!\",\n        keyboardType: \"default\",\n        returnKeyType: \"next\",\n        initialValue: editedProduct ? editedProduct.imageUrl : \"\",\n        initiallyValid: !!editedProduct,\n        required: true\n      }), editedProduct ? null : _jsx(Input, {\n        label: \"Price\",\n        errorText: \"Please input a valid price!\",\n        keyboardType: \"decimal-pad\",\n        returnKeyType: \"next\"\n      }), _jsx(Input, {\n        label: \"Description\",\n        errorText: \"Please input a valid Description!\",\n        keyboardType: \"default\",\n        autoCapitalize: \"words\",\n        autoCorrect: true,\n        multiline: true,\n        numberOfLine: 3,\n        initialValue: editedProduct ? editedProduct.description : \"\",\n        initiallyValid: !!editedProduct\n      })]\n    })\n  });\n};\n\nEditProductScreen.navigationOptions = function (navData) {\n  var submitFn = navData.navigation.getParam(\"submit\");\n  return {\n    headerTitle: navData.navigation.getParam(\"productId\") ? \"Edit Product\" : \"Add Product\",\n    headerRight: _jsx(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      children: _jsx(Item, {\n        title: \"Save\",\n        iconName: Platform.OS === \"android\" ? \"md-checkmark\" : \"ios-checkmark\",\n        onPress: submitFn\n      })\n    })\n  };\n};\n\nvar styles = StyleSheet.create({\n  form: {\n    margin: 20\n  }\n});\nexport default EditProductScreen;","map":{"version":3,"sources":["/Users/user/React-Native/sec 9 Handling User Input/screens/user/EditProductScreen.js"],"names":["React","useEffect","useCallback","useReducer","HeaderButtons","Item","useSelector","useDispatch","HeaderButton","Input","productsActions","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","EditProductScreen","props","prodId","navigation","getParam","editedProduct","products","userProducts","find","prod","id","dispatch","title","imageUrl","description","price","formState","dispatchFormState","submitHandler","Alert","alert","text","updateProduct","createProduct","goBack","setParams","submit","inputChangeHandler","inputIdentifier","inputValue","inputValidity","styles","form","bind","navigationOptions","navData","submitFn","headerTitle","headerRight","Platform","OS","StyleSheet","create","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useReducer } from \"react\";\nimport {\n  View,\n  ScrollView,\n  Text,\n  TextInput,\n  StyleSheet,\n  Platform,\n  Alert,\n} from \"react-native\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport Input from \"../../components/UI/Input\";\nimport * as productsActions from \"../../store/actions/products\";\n\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value,\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValues: updatedValues,\n      inputValidities: updatedValidities,\n    };\n  }\n  return state;\n};\n\nconst EditProductScreen = (props) => {\n  const prodId = props.navigation.getParam(\"productId\");\n  const editedProduct = useSelector((state) =>\n    state.products.userProducts.find((prod) => prod.id === prodId)\n  );\n  const dispatch = useDispatch();\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      title: editedProduct ? editedProduct.title : \"\",\n      imageUrl: editedProduct ? editedProduct.imageUrl : \"\",\n      description: editedProduct ? editedProduct.description : \"\",\n      price: \"\",\n    },\n    inputValidities: {\n      title: editedProduct ? true : false,\n      imageUrl: editedProduct ? true : false,\n      description: editedProduct ? true : false,\n      price: editedProduct ? true : false,\n    },\n    formIsValid: editedProduct ? true : false,\n  });\n\n  const submitHandler = useCallback(() => {\n    if (!formState.formIsValid) {\n      Alert.alert(\"wrong input\", \"Please check the errors in the form.\", [\n        { text: \"Okay\" },\n      ]);\n      return;\n    }\n    if (editedProduct) {\n      dispatch(\n        productsActions.updateProduct(\n          prodId,\n          formState.inputValues.title,\n          formState.inputValues.description,\n          formState.inputValues.imageUrl\n        )\n      );\n    } else {\n      dispatch(\n        productsActions.createProduct(\n          formState.inputValues.title,\n          formState.inputValues.description,\n          formState.inputValues.imageUrl,\n          +formState.inputValues.price\n        )\n      );\n    }\n    props.navigation.goBack();\n  }, [dispatch, prodId, formState]);\n\n  useEffect(() => {\n    props.navigation.setParams({ submit: submitHandler });\n  }, [submitHandler]);\n\n  const inputChangeHandler = useCallback(\n    (inputIdentifier, inputValue, inputValidity) => {\n      dispatchFormState({\n        type: FORM_INPUT_UPDATE,\n        value: inputValue,\n        isValid: inputValidity,\n        input: inputIdentifier,\n      });\n    },\n    [dispatchFormState]\n  );\n\n  return (\n    <ScrollView>\n      <View style={styles.form}>\n        <Input\n          label=\"Title\"\n          errorText=\"Please input a valid title!\"\n          keyboardType=\"default\"\n          autoCapitalize=\"words\"\n          autoCorrect\n          returnKeyType=\"next\"\n          onInputChange={inputChangeHandler.bind(this, \"title\")}\n          initialValue={editedProduct ? editedProduct.title : \"\"}\n          initiallyValid={!!editedProduct}\n          required\n        />\n        <Input\n          label=\"Image Url\"\n          errorText=\"Please input a valid image url!\"\n          keyboardType=\"default\"\n          returnKeyType=\"next\"\n          initialValue={editedProduct ? editedProduct.imageUrl : \"\"}\n          initiallyValid={!!editedProduct}\n          required\n        />\n        {editedProduct ? null : (\n          <Input\n            label=\"Price\"\n            errorText=\"Please input a valid price!\"\n            keyboardType=\"decimal-pad\"\n            returnKeyType=\"next\"\n          />\n        )}\n        <Input\n          label=\"Description\"\n          errorText=\"Please input a valid Description!\"\n          keyboardType=\"default\"\n          autoCapitalize=\"words\"\n          autoCorrect\n          multiline\n          numberOfLine={3}\n          initialValue={editedProduct ? editedProduct.description : \"\"}\n          initiallyValid={!!editedProduct}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nEditProductScreen.navigationOptions = (navData) => {\n  const submitFn = navData.navigation.getParam(\"submit\");\n  return {\n    headerTitle: navData.navigation.getParam(\"productId\")\n      ? \"Edit Product\"\n      : \"Add Product\",\n    headerRight: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Save\"\n          iconName={\n            Platform.OS === \"android\" ? \"md-checkmark\" : \"ios-checkmark\"\n          }\n          onPress={submitFn}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  form: {\n    margin: 20,\n  },\n});\n\nexport default EditProductScreen;\n"]},"metadata":{},"sourceType":"module"}