{"ast":null,"code":"import React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport ProductItem from \"../../components/shop/ProductItem\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport Colors from \"../../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProductsOverviewScreen = function ProductsOverviewScreen(props) {\n  var products = useSelector(function (state) {\n    return state.products.availableProducts;\n  });\n  var dispatch = useDispatch();\n\n  var selectItemHandler = function selectItemHandler(id, title) {\n    props.navigation.navigate(\"ProductDetail\", {\n      productId: id,\n      productTitle: title\n    });\n  };\n\n  return _jsx(FlatList, {\n    data: products,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return _jsxs(ProductItem, {\n        image: itemData.item.imageUrl,\n        title: itemData.item.title,\n        price: itemData.item.price,\n        onSelect: function onSelect() {\n          selectItemHandler(itemData.item.id, itemData.item.title);\n        },\n        onAddToCart: function onAddToCart() {\n          dispatch(cartActions.addToCart(itemData.item));\n        },\n        children: [_jsx(Button, {\n          color: Colors.primary,\n          title: \"View Details\",\n          onPress: function onPress() {\n            selectItemHandler(itemData.item.id, itemData.item.title);\n          }\n        }), _jsx(Button, {\n          color: Colors.primary,\n          title: \"To Cart\",\n          onPress: function onPress() {\n            dispatch(cartActions.addToCart(itemData.item));\n          }\n        })]\n      });\n    }\n  });\n};\n\nProductsOverviewScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: \"All Products\",\n    headerLeft: function headerLeft() {\n      return _jsx(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        children: _jsx(Item, {\n          title: \"Menu\",\n          iconName: Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\",\n          onPress: function onPress() {\n            navData.navigation.toggleDrawer();\n          }\n        })\n      });\n    },\n    headerRight: function headerRight() {\n      return _jsx(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        children: _jsx(Item, {\n          title: \"Cart\",\n          iconName: Platform.OS === \"android\" ? \"md-cart\" : \"ios-cart\",\n          onPress: function onPress() {\n            navData.navigation.navigate(\"Cart\");\n          }\n        })\n      });\n    }\n  };\n};\n\nexport default ProductsOverviewScreen;","map":{"version":3,"sources":["/Users/user/React-Native/sec 9 Handling User Input/screens/shop/ProductsOverviewScreen.js"],"names":["React","useSelector","useDispatch","HeaderButtons","Item","ProductItem","cartActions","HeaderButton","Colors","ProductsOverviewScreen","props","products","state","availableProducts","dispatch","selectItemHandler","id","title","navigation","navigate","productId","productTitle","item","itemData","imageUrl","price","addToCart","primary","navigationOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FlatList, Platform, Button } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\n\nimport ProductItem from \"../../components/shop/ProductItem\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport Colors from \"../../constants/Colors\";\n\nconst ProductsOverviewScreen = (props) => {\n  const products = useSelector((state) => state.products.availableProducts);\n  const dispatch = useDispatch();\n\n  const selectItemHandler = (id, title) => {\n    props.navigation.navigate(\"ProductDetail\", {\n      productId: id,\n      productTitle: title,\n    });\n  };\n\n  return (\n    <FlatList\n      data={products}\n      keyExtractor={(item) => item.id}\n      renderItem={(itemData) => (\n        <ProductItem\n          image={itemData.item.imageUrl}\n          title={itemData.item.title}\n          price={itemData.item.price}\n          onSelect={() => {\n            selectItemHandler(itemData.item.id, itemData.item.title);\n          }}\n          onAddToCart={() => {\n            dispatch(cartActions.addToCart(itemData.item));\n          }}\n        >\n          <Button\n            color={Colors.primary}\n            title=\"View Details\"\n            onPress={() => {\n              selectItemHandler(itemData.item.id, itemData.item.title);\n            }}\n          />\n          <Button\n            color={Colors.primary}\n            title=\"To Cart\"\n            onPress={() => {\n              dispatch(cartActions.addToCart(itemData.item));\n            }}\n          />\n        </ProductItem>\n      )}\n    />\n  );\n};\n\nProductsOverviewScreen.navigationOptions = (navData) => {\n  return {\n    headerTitle: \"All Products\",\n    headerLeft: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName={Platform.OS === \"android\" ? \"md-menu\" : \"ios-menu\"}\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    ),\n    headerRight: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Cart\"\n          iconName={Platform.OS === \"android\" ? \"md-cart\" : \"ios-cart\"}\n          onPress={() => {\n            navData.navigation.navigate(\"Cart\");\n          }}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nexport default ProductsOverviewScreen;\n"]},"metadata":{},"sourceType":"module"}