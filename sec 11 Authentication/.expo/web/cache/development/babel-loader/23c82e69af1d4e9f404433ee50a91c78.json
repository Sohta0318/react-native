{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useReducer } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar INPUT_CHANGE = \"INPUT_CHANGE\";\nvar INPUT_BLUR = \"INPUT_BLUR\";\n\nvar inputReducer = function inputReducer(state, action) {\n  switch (action.type) {\n    case INPUT_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        value: action.value,\n        isValid: action.isValid\n      });\n\n    case INPUT_BLUR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        touched: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar Input = function Input(props) {\n  var _useReducer = useReducer(inputReducer, {\n    value: props.initialValue ? props.initialValue : \"\",\n    isValid: props.initiallyValid,\n    touched: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      inputState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    props.onInputChange(inputState.value, inputState.isValid);\n  });\n\n  var textChangeHandler = function textChangeHandler(text) {\n    var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    var isValid = true;\n\n    if (props.required && text.trim().length === 0) {\n      isValid = false;\n    }\n\n    if (props.email && !emailRegex.test(text.toLowerCase())) {\n      isValid = false;\n    }\n\n    if (props.min != null && +text < props.min) {\n      isValid = false;\n    }\n\n    if (props.max != null && +text > props.max) {\n      isValid = false;\n    }\n\n    if (props.minLength != null && text.length < props.minLength) {\n      isValid = false;\n    }\n\n    dispatch({\n      type: INPUT_CHANGE,\n      value: text,\n      isValid: isValid\n    });\n  };\n\n  var lostFocusHandler = function lostFocusHandler() {\n    dispatch({\n      type: INPUT_BLUR\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.formControl,\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: props.label\n    }), _jsx(TextInput, _objectSpread(_objectSpread({}, props), {}, {\n      style: styles.input,\n      value: formState.inputValues.title,\n      onChangeText: textChangeHandler,\n      onBlur: lostFocusHandler\n    })), !formState.inputValidities.title && _jsx(Text, {\n      children: props.errorText\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  formControl: {\n    width: \"100%\"\n  },\n  label: {\n    fontFamily: \"open-sans-bold\",\n    marginVertical: 8\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: \"#ccc\",\n    borderBottomWidth: 1\n  }\n});\nexport default Input;","map":{"version":3,"sources":["/Users/user/React-Native/sec 9 Handling User Input/components/UI/Input.js"],"names":["React","useEffect","useReducer","INPUT_CHANGE","INPUT_BLUR","inputReducer","state","action","type","value","isValid","touched","Input","props","initialValue","initiallyValid","inputState","dispatch","onInputChange","textChangeHandler","text","emailRegex","required","trim","length","email","test","toLowerCase","min","max","minLength","lostFocusHandler","styles","formControl","label","input","formState","inputValues","title","inputValidities","errorText","StyleSheet","create","width","fontFamily","marginVertical","paddingHorizontal","paddingVertical","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\n\nconst INPUT_CHANGE = \"INPUT_CHANGE\";\nconst INPUT_BLUR = \"INPUT_BLUR\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case INPUT_CHANGE:\n      return { ...state, value: action.value, isValid: action.isValid };\n    case INPUT_BLUR:\n      return { ...state, touched: true };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue ? props.initialValue : \"\",\n    isValid: props.initiallyValid,\n    touched: false,\n  });\n\n  useEffect(() => {\n    props.onInputChange(inputState.value, inputState.isValid);\n  });\n\n  const textChangeHandler = (text) => {\n    const emailRegex =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let isValid = true;\n    if (props.required && text.trim().length === 0) {\n      isValid = false;\n    }\n    if (props.email && !emailRegex.test(text.toLowerCase())) {\n      isValid = false;\n    }\n    if (props.min != null && +text < props.min) {\n      isValid = false;\n    }\n    if (props.max != null && +text > props.max) {\n      isValid = false;\n    }\n    if (props.minLength != null && text.length < props.minLength) {\n      isValid = false;\n    }\n    dispatch({ type: INPUT_CHANGE, value: text, isValid });\n  };\n\n  const lostFocusHandler = () => {\n    dispatch({ type: INPUT_BLUR });\n  };\n  return (\n    <View style={styles.formControl}>\n      <Text style={styles.label}>{props.label}</Text>\n      <TextInput\n        {...props}\n        style={styles.input}\n        value={formState.inputValues.title}\n        onChangeText={textChangeHandler}\n        onBlur={lostFocusHandler}\n      />\n      {!formState.inputValidities.title && <Text>{props.errorText}</Text>}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  formControl: {\n    width: \"100%\",\n  },\n  label: {\n    fontFamily: \"open-sans-bold\",\n    marginVertical: 8,\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: \"#ccc\",\n    borderBottomWidth: 1,\n  },\n});\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}