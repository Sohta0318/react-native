{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProductDetailScreen = function ProductDetailScreen(props) {\n  var productId = props.navigation.getParam(\"productId\");\n  var selectedProduct = useSelector(function (state) {\n    return state.products.availableProducts.find(function (prod) {\n      return prod.id === productId;\n    });\n  });\n  return _jsxs(ScrollView, {\n    children: [_jsx(Image, {\n      style: styles.image,\n      source: {\n        uri: selectedProduct.imageUrl\n      }\n    }), _jsx(Button, {\n      title: \"Add to Cart\",\n      onPress: function onPress() {}\n    }), _jsxs(Text, {\n      style: styles.price,\n      children: [\"$\", selectedProduct.price.toFixed(2)]\n    }), _jsx(Text, {\n      style: styles.description,\n      children: selectedProduct.description\n    })]\n  });\n};\n\nProductDetailScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: navData.navigation.getParam(\"productTitle\")\n  };\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: \"100%\",\n    height: 300\n  },\n  price: {\n    fontSize: 20,\n    color: \"#888\",\n    textAlign: \"center\",\n    marginVertical: 20\n  }\n});\nexport default ProductDetailScreen;","map":{"version":3,"sources":["/Users/user/React-Native/sec8/screens/shop/ProductDetailScreen.js"],"names":["React","useSelector","ProductDetailScreen","props","productId","navigation","getParam","selectedProduct","state","products","availableProducts","find","prod","id","styles","image","uri","imageUrl","price","toFixed","description","navigationOptions","navData","headerTitle","StyleSheet","create","width","height","fontSize","color","textAlign","marginVertical"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AACrC,MAAMC,SAAS,GAAGD,KAAK,CAACE,UAAN,CAAiBC,QAAjB,CAA0B,WAA1B,CAAlB;AACA,MAAMC,eAAe,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA,WAClCA,KAAK,CAACC,QAAN,CAAeC,iBAAf,CAAiCC,IAAjC,CAAsC,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAL,KAAYT,SAAtB;AAAA,KAAtC,CADkC;AAAA,GAAD,CAAnC;AAGA,SACE,MAAC,UAAD;AAAA,eACE,KAAC,KAAD;AAAO,MAAA,KAAK,EAAEU,MAAM,CAACC,KAArB;AAA4B,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAET,eAAe,CAACU;AAAvB;AAApC,MADF,EAEE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,OAAO,EAAE,mBAAM,CAAE;AAA7C,MAFF,EAGE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,KAApB;AAAA,sBAA6BX,eAAe,CAACW,KAAhB,CAAsBC,OAAtB,CAA8B,CAA9B,CAA7B;AAAA,MAHF,EAIE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,WAApB;AAAA,gBAAkCb,eAAe,CAACa;AAAlD,MAJF;AAAA,IADF;AAQD,CAbD;;AAeAlB,mBAAmB,CAACmB,iBAApB,GAAwC,UAACC,OAAD,EAAa;AACnD,SAAO;AAAEC,IAAAA,WAAW,EAAED,OAAO,CAACjB,UAAR,CAAmBC,QAAnB,CAA4B,cAA5B;AAAf,GAAP;AACD,CAFD;;AAIA,IAAMQ,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,KAAK,EAAE;AAAEW,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GADwB;AAE/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILC,IAAAA,cAAc,EAAE;AAJX;AAFwB,CAAlB,CAAf;AAUA,eAAe7B,mBAAf","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Button,\n  Image,\n  ScrollView,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst ProductDetailScreen = (props) => {\n  const productId = props.navigation.getParam(\"productId\");\n  const selectedProduct = useSelector((state) =>\n    state.products.availableProducts.find((prod) => prod.id === productId)\n  );\n  return (\n    <ScrollView>\n      <Image style={styles.image} source={{ uri: selectedProduct.imageUrl }} />\n      <Button title=\"Add to Cart\" onPress={() => {}} />\n      <Text style={styles.price}>${selectedProduct.price.toFixed(2)}</Text>\n      <Text style={styles.description}>{selectedProduct.description}</Text>\n    </ScrollView>\n  );\n};\n\nProductDetailScreen.navigationOptions = (navData) => {\n  return { headerTitle: navData.navigation.getParam(\"productTitle\") };\n};\n\nconst styles = StyleSheet.create({\n  image: { width: \"100%\", height: 300 },\n  price: {\n    fontSize: 20,\n    color: \"#888\",\n    textAlign: \"center\",\n    marginVertical: 20,\n  },\n});\n\nexport default ProductDetailScreen;\n"]},"metadata":{},"sourceType":"module"}