{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { createDrawerNavigator, DrawerNavigatorItems } from \"react-navigation-drawer\";\nimport * as authActions from \"../store/actions/auth\";\nimport ProductsOverviewScreen from \"../screens/shop/ProductsOverviewScreen\";\nimport ProductDetailScreen from \"../screens/shop/ProductDetailScreen\";\nimport CartScreen from \"../screens/shop/CartScreen\";\nimport OrdersScreen from \"../screens/shop/OrdersScreen\";\nimport Colors from \"../constants/Colors\";\nimport UserProductsScreen from \"../screens/user/UserProductsScreen\";\nimport EditProductScreen from \"../screens/user/EditProductScreen\";\nimport AuthScreen from \"../screens/user/AuthScreen\";\nimport StartUpScreen from \"../screens/StartupScreen\";\nimport { useDispatch } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Platform.OS === \"android\" ? Colors.primary : \"\"\n  },\n  headerTitleStyle: {\n    fontFamily: \"open-sans-bold\"\n  },\n  headerBackTitleStyle: {\n    fontFamily: \"open-sans\"\n  },\n  headerTintColor: Platform.OS === \"android\" ? \"white\" : Colors.primary\n};\nvar ProductsNavigator = createStackNavigator({\n  ProductsOverview: ProductsOverviewScreen,\n  ProductDetail: ProductDetailScreen,\n  Cart: CartScreen\n}, {\n  navigationOptions: {\n    drawerIcon: function drawerIcon(drawerConfig) {\n      return _jsx(Ionicons, {\n        name: Platform.OS === \"android\" ? \"md-cart\" : \"ios-cart\",\n        size: 23,\n        color: drawerConfig.tintColor\n      });\n    }\n  },\n  defaultNavigationOptions: defaultNavOptions\n});\nvar OrdersNavigator = createStackNavigator({\n  Orders: OrdersScreen\n}, {\n  navigationOptions: {\n    drawerIcon: function drawerIcon(drawerConfig) {\n      return _jsx(Ionicons, {\n        name: Platform.OS === \"android\" ? \"md-list\" : \"ios-list\",\n        size: 23,\n        color: drawerConfig.tintColor\n      });\n    }\n  },\n  defaultNavigationOptions: defaultNavOptions\n});\nvar AdminNavigator = createStackNavigator({\n  UserProducts: UserProductsScreen,\n  EditProduct: EditProductScreen\n}, {\n  navigationOptions: {\n    drawerIcon: function drawerIcon(drawerConfig) {\n      return _jsx(Ionicons, {\n        name: Platform.OS === \"android\" ? \"md-create\" : \"ios-create\",\n        size: 23,\n        color: drawerConfig.tintColor\n      });\n    }\n  },\n  defaultNavigationOptions: defaultNavOptions\n});\nvar ShopNavigator = createDrawerNavigator({\n  Products: ProductsNavigator,\n  Orders: OrdersNavigator,\n  Admin: AdminNavigator\n}, {\n  contentOptions: {\n    activeTintColor: Colors.primary\n  },\n  contentComponent: function contentComponent(props) {\n    var dispatch = useDispatch();\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        paddingTop: 20\n      },\n      children: _jsxs(SafeAreaView, {\n        forceInset: {\n          top: \"always\",\n          horizontal: \"never\"\n        },\n        children: [_jsx(DrawerNavigatorItems, _objectSpread({}, props)), _jsx(Button, {\n          title: \"Logout\",\n          color: Colors.primary,\n          onPress: function onPress() {\n            dispatch(authActions.logout());\n            props.navigation.navigate(\"Auth\");\n          }\n        })]\n      })\n    });\n  }\n});\nvar AuthNavigator = createStackNavigator({\n  Auth: AuthScreen\n}, {\n  defaultNavigationOptions: defaultNavOptions\n});\nvar MainNavigator = createSwitchNavigator({\n  Startup: StartUpScreen,\n  Auth: AuthNavigator,\n  Shop: ShopNavigator\n});\nexport default createAppContainer(MainNavigator);","map":{"version":3,"sources":["/Users/user/React-Native/sec 11 Authentication/navigation/ShopNavigator.js"],"names":["React","createAppContainer","createSwitchNavigator","Ionicons","createStackNavigator","createDrawerNavigator","DrawerNavigatorItems","authActions","ProductsOverviewScreen","ProductDetailScreen","CartScreen","OrdersScreen","Colors","UserProductsScreen","EditProductScreen","AuthScreen","StartUpScreen","useDispatch","defaultNavOptions","headerStyle","backgroundColor","Platform","OS","primary","headerTitleStyle","fontFamily","headerBackTitleStyle","headerTintColor","ProductsNavigator","ProductsOverview","ProductDetail","Cart","navigationOptions","drawerIcon","drawerConfig","tintColor","defaultNavigationOptions","OrdersNavigator","Orders","AdminNavigator","UserProducts","EditProduct","ShopNavigator","Products","Admin","contentOptions","activeTintColor","contentComponent","props","dispatch","flex","paddingTop","top","horizontal","logout","navigation","navigate","AuthNavigator","Auth","MainNavigator","Startup","Shop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { Platform, SafeAreaView, Button, View } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport {\n  createDrawerNavigator,\n  DrawerNavigatorItems,\n} from \"react-navigation-drawer\";\nimport * as authActions from \"../store/actions/auth\";\n\nimport ProductsOverviewScreen from \"../screens/shop/ProductsOverviewScreen\";\nimport ProductDetailScreen from \"../screens/shop/ProductDetailScreen\";\nimport CartScreen from \"../screens/shop/CartScreen\";\nimport OrdersScreen from \"../screens/shop/OrdersScreen\";\nimport Colors from \"../constants/Colors\";\nimport UserProductsScreen from \"../screens/user/UserProductsScreen\";\nimport EditProductScreen from \"../screens/user/EditProductScreen\";\nimport AuthScreen from \"../screens/user/AuthScreen\";\nimport StartUpScreen from \"../screens/StartupScreen\";\nimport { useDispatch } from \"react-redux\";\n\nconst defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Platform.OS === \"android\" ? Colors.primary : \"\",\n  },\n  headerTitleStyle: {\n    fontFamily: \"open-sans-bold\",\n  },\n  headerBackTitleStyle: {\n    fontFamily: \"open-sans\",\n  },\n  headerTintColor: Platform.OS === \"android\" ? \"white\" : Colors.primary,\n};\n\nconst ProductsNavigator = createStackNavigator(\n  {\n    ProductsOverview: ProductsOverviewScreen,\n    ProductDetail: ProductDetailScreen,\n    Cart: CartScreen,\n  },\n  {\n    navigationOptions: {\n      drawerIcon: (drawerConfig) => (\n        <Ionicons\n          name={Platform.OS === \"android\" ? \"md-cart\" : \"ios-cart\"}\n          size={23}\n          color={drawerConfig.tintColor}\n        />\n      ),\n    },\n    defaultNavigationOptions: defaultNavOptions,\n  }\n);\n\nconst OrdersNavigator = createStackNavigator(\n  {\n    Orders: OrdersScreen,\n  },\n  {\n    navigationOptions: {\n      drawerIcon: (drawerConfig) => (\n        <Ionicons\n          name={Platform.OS === \"android\" ? \"md-list\" : \"ios-list\"}\n          size={23}\n          color={drawerConfig.tintColor}\n        />\n      ),\n    },\n    defaultNavigationOptions: defaultNavOptions,\n  }\n);\n\nconst AdminNavigator = createStackNavigator(\n  {\n    UserProducts: UserProductsScreen,\n    EditProduct: EditProductScreen,\n  },\n  {\n    navigationOptions: {\n      drawerIcon: (drawerConfig) => (\n        <Ionicons\n          name={Platform.OS === \"android\" ? \"md-create\" : \"ios-create\"}\n          size={23}\n          color={drawerConfig.tintColor}\n        />\n      ),\n    },\n    defaultNavigationOptions: defaultNavOptions,\n  }\n);\n\nconst ShopNavigator = createDrawerNavigator(\n  {\n    Products: ProductsNavigator,\n    Orders: OrdersNavigator,\n    Admin: AdminNavigator,\n  },\n  {\n    contentOptions: {\n      activeTintColor: Colors.primary,\n    },\n    contentComponent: (props) => {\n      const dispatch = useDispatch();\n      return (\n        <View style={{ flex: 1, paddingTop: 20 }}>\n          <SafeAreaView forceInset={{ top: \"always\", horizontal: \"never\" }}>\n            <DrawerNavigatorItems {...props} />\n            <Button\n              title=\"Logout\"\n              color={Colors.primary}\n              onPress={() => {\n                dispatch(authActions.logout());\n                props.navigation.navigate(\"Auth\");\n              }}\n            />\n          </SafeAreaView>\n        </View>\n      );\n    },\n  }\n);\n\nconst AuthNavigator = createStackNavigator(\n  {\n    Auth: AuthScreen,\n  },\n  {\n    defaultNavigationOptions: defaultNavOptions,\n  }\n);\n\nconst MainNavigator = createSwitchNavigator({\n  Startup: StartUpScreen,\n  Auth: AuthNavigator,\n  Shop: ShopNavigator,\n});\nexport default createAppContainer(MainNavigator);\n"]},"metadata":{},"sourceType":"module"}