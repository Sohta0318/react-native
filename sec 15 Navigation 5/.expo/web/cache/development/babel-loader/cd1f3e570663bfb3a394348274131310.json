{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useCallback, useReducer, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport Input from \"../../components/UI/Input\";\nimport Colors from \"../../constants/Colors\";\nimport * as productsActions from \"../../store/actions/products\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValues: updatedValues,\n      inputValidities: updatedValidities\n    };\n  }\n\n  return state;\n};\n\nvar EditProductScreen = function EditProductScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var prodId = props.navigation.getParam(\"productId\");\n  var editedProduct = useSelector(function (state) {\n    return state.products.userProducts.find(function (prod) {\n      return prod.id === prodId;\n    });\n  });\n  var dispatch = useDispatch();\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      title: editedProduct ? editedProduct.title : \"\",\n      imageUrl: editedProduct ? editedProduct.imageUrl : \"\",\n      description: editedProduct ? editedProduct.description : \"\",\n      price: \"\"\n    },\n    inputValidities: {\n      title: editedProduct ? true : false,\n      imageUrl: editedProduct ? true : false,\n      description: editedProduct ? true : false,\n      price: editedProduct ? true : false\n    },\n    formIsValid: editedProduct ? true : false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  useEffect(function () {\n    if (error) {\n      Alert.alert(\"An error ocurred!\", error, [{\n        text: \"Okay\"\n      }]);\n    }\n  }, [error]);\n  var submitHandler = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (formState.formIsValid) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert(\"wrong input\", \"Please check the errors in the form.\", [{\n              text: \"Okay\"\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            setError(null);\n            setIsLoading(true);\n            _context.prev = 5;\n\n            if (!editedProduct) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(dispatch(productsActions.updateProduct(prodId, formState.inputValues.title, formState.inputValues.description, formState.inputValues.imageUrl)));\n\n          case 9:\n            _context.next = 13;\n            break;\n\n          case 11:\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(dispatch(productsActions.createProduct(formState.inputValues.title, formState.inputValues.description, formState.inputValues.imageUrl, +formState.inputValues.price)));\n\n          case 13:\n            props.navigation.goBack();\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            setError(_context.t0.message);\n\n          case 19:\n            setIsLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 16]], Promise);\n  }, [dispatch, prodId, formState]);\n  useEffect(function () {\n    props.navigation.setParams({\n      submit: submitHandler\n    });\n  }, [submitHandler]);\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n\n  if (isLoading) {\n    return _jsx(View, {\n      style: styles.centered,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: Colors.primary\n      })\n    });\n  }\n\n  return _jsx(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: \"padding\",\n    keyboardVerticalOffset: 100,\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.form,\n        children: [_jsx(Input, {\n          id: \"title\",\n          label: \"Title\",\n          errorText: \"Please input a valid title!\",\n          keyboardType: \"default\",\n          autoCapitalize: \"words\",\n          autoCorrect: true,\n          returnKeyType: \"next\",\n          onInputChange: inputChangeHandler,\n          initialValue: editedProduct ? editedProduct.title : \"\",\n          initiallyValid: !!editedProduct,\n          required: true\n        }), _jsx(Input, {\n          id: \"imageUrl\",\n          label: \"Image Url\",\n          errorText: \"Please input a valid image url!\",\n          keyboardType: \"default\",\n          returnKeyType: \"next\",\n          onInputChange: inputChangeHandler,\n          initialValue: editedProduct ? editedProduct.imageUrl : \"\",\n          initiallyValid: !!editedProduct,\n          required: true\n        }), editedProduct ? null : _jsx(Input, {\n          id: \"price\",\n          label: \"Price\",\n          errorText: \"Please input a valid price!\",\n          keyboardType: \"decimal-pad\",\n          returnKeyType: \"next\",\n          onInputChange: inputChangeHandler,\n          required: true,\n          min: 0.1\n        }), _jsx(Input, {\n          id: \"description\",\n          label: \"Description\",\n          errorText: \"Please input a valid Description!\",\n          keyboardType: \"default\",\n          autoCapitalize: \"words\",\n          autoCorrect: true,\n          multiline: true,\n          numberOfLine: 3,\n          onInputChange: inputChangeHandler,\n          initialValue: editedProduct ? editedProduct.description : \"\",\n          initiallyValid: !!editedProduct,\n          required: true,\n          minLength: 5\n        })]\n      })\n    })\n  });\n};\n\nEditProductScreen.navigationOptions = function (navData) {\n  var submitFn = navData.navigation.getParam(\"submit\");\n  return {\n    headerTitle: navData.navigation.getParam(\"productId\") ? \"Edit Product\" : \"Add Product\",\n    headerRight: _jsx(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      children: _jsx(Item, {\n        title: \"Save\",\n        iconName: Platform.OS === \"android\" ? \"md-checkmark\" : \"ios-checkmark\",\n        onPress: submitFn\n      })\n    })\n  };\n};\n\nvar styles = StyleSheet.create({\n  form: {\n    margin: 20\n  },\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default EditProductScreen;","map":{"version":3,"sources":["/Users/user/React-Native/sec 11 Authentication/screens/user/EditProductScreen.js"],"names":["React","useEffect","useCallback","useReducer","useState","HeaderButtons","Item","useSelector","useDispatch","HeaderButton","Input","Colors","productsActions","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","EditProductScreen","props","isLoading","setIsLoading","error","setError","prodId","navigation","getParam","editedProduct","products","userProducts","find","prod","id","dispatch","title","imageUrl","description","price","formState","dispatchFormState","Alert","alert","text","submitHandler","updateProduct","createProduct","goBack","message","setParams","submit","inputChangeHandler","inputIdentifier","inputValue","inputValidity","styles","centered","primary","flex","form","navigationOptions","navData","submitFn","headerTitle","headerRight","Platform","OS","StyleSheet","create","margin","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useReducer, useState } from \"react\";\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  Platform,\n  Alert,\n  KeyboardAvoidingView,\n  ActivityIndicator,\n} from \"react-native\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport Input from \"../../components/UI/Input\";\nimport Colors from \"../../constants/Colors\";\nimport * as productsActions from \"../../store/actions/products\";\n\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value,\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValues: updatedValues,\n      inputValidities: updatedValidities,\n    };\n  }\n  return state;\n};\n\nconst EditProductScreen = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const prodId = props.navigation.getParam(\"productId\");\n  const editedProduct = useSelector((state) =>\n    state.products.userProducts.find((prod) => prod.id === prodId)\n  );\n  const dispatch = useDispatch();\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      title: editedProduct ? editedProduct.title : \"\",\n      imageUrl: editedProduct ? editedProduct.imageUrl : \"\",\n      description: editedProduct ? editedProduct.description : \"\",\n      price: \"\",\n    },\n    inputValidities: {\n      title: editedProduct ? true : false,\n      imageUrl: editedProduct ? true : false,\n      description: editedProduct ? true : false,\n      price: editedProduct ? true : false,\n    },\n    formIsValid: editedProduct ? true : false,\n  });\n\n  useEffect(() => {\n    if (error) {\n      Alert.alert(\"An error ocurred!\", error, [{ text: \"Okay\" }]);\n    }\n  }, [error]);\n\n  const submitHandler = useCallback(async () => {\n    if (!formState.formIsValid) {\n      Alert.alert(\"wrong input\", \"Please check the errors in the form.\", [\n        { text: \"Okay\" },\n      ]);\n      return;\n    }\n\n    setError(null);\n    setIsLoading(true);\n    try {\n      if (editedProduct) {\n        await dispatch(\n          productsActions.updateProduct(\n            prodId,\n            formState.inputValues.title,\n            formState.inputValues.description,\n            formState.inputValues.imageUrl\n          )\n        );\n      } else {\n        await dispatch(\n          productsActions.createProduct(\n            formState.inputValues.title,\n            formState.inputValues.description,\n            formState.inputValues.imageUrl,\n            +formState.inputValues.price\n          )\n        );\n      }\n      props.navigation.goBack();\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, [dispatch, prodId, formState]);\n\n  useEffect(() => {\n    props.navigation.setParams({ submit: submitHandler });\n  }, [submitHandler]);\n\n  const inputChangeHandler = useCallback(\n    (inputIdentifier, inputValue, inputValidity) => {\n      dispatchFormState({\n        type: FORM_INPUT_UPDATE,\n        value: inputValue,\n        isValid: inputValidity,\n        input: inputIdentifier,\n      });\n    },\n    [dispatchFormState]\n  );\n\n  if (isLoading) {\n    return (\n      <View style={styles.centered}>\n        <ActivityIndicator size=\"large\" color={Colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView\n      style={{ flex: 1 }}\n      behavior=\"padding\"\n      keyboardVerticalOffset={100}\n    >\n      <ScrollView>\n        <View style={styles.form}>\n          <Input\n            id=\"title\"\n            label=\"Title\"\n            errorText=\"Please input a valid title!\"\n            keyboardType=\"default\"\n            autoCapitalize=\"words\"\n            autoCorrect\n            returnKeyType=\"next\"\n            onInputChange={inputChangeHandler}\n            initialValue={editedProduct ? editedProduct.title : \"\"}\n            initiallyValid={!!editedProduct}\n            required\n          />\n          <Input\n            id=\"imageUrl\"\n            label=\"Image Url\"\n            errorText=\"Please input a valid image url!\"\n            keyboardType=\"default\"\n            returnKeyType=\"next\"\n            onInputChange={inputChangeHandler}\n            initialValue={editedProduct ? editedProduct.imageUrl : \"\"}\n            initiallyValid={!!editedProduct}\n            required\n          />\n          {editedProduct ? null : (\n            <Input\n              id=\"price\"\n              label=\"Price\"\n              errorText=\"Please input a valid price!\"\n              keyboardType=\"decimal-pad\"\n              returnKeyType=\"next\"\n              onInputChange={inputChangeHandler}\n              required\n              min={0.1}\n            />\n          )}\n          <Input\n            id=\"description\"\n            label=\"Description\"\n            errorText=\"Please input a valid Description!\"\n            keyboardType=\"default\"\n            autoCapitalize=\"words\"\n            autoCorrect\n            multiline\n            numberOfLine={3}\n            onInputChange={inputChangeHandler}\n            initialValue={editedProduct ? editedProduct.description : \"\"}\n            initiallyValid={!!editedProduct}\n            required\n            minLength={5}\n          />\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nEditProductScreen.navigationOptions = (navData) => {\n  const submitFn = navData.navigation.getParam(\"submit\");\n  return {\n    headerTitle: navData.navigation.getParam(\"productId\")\n      ? \"Edit Product\"\n      : \"Add Product\",\n    headerRight: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Save\"\n          iconName={\n            Platform.OS === \"android\" ? \"md-checkmark\" : \"ios-checkmark\"\n          }\n          onPress={submitFn}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  form: {\n    margin: 20,\n  },\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nexport default EditProductScreen;\n"]},"metadata":{},"sourceType":"module"}