{"ast":null,"code":"import React, { useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NavigationActions } from \"react-navigation\";\nimport ShopNavigator from \"./ShopNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar NavigationContainer = function NavigationContainer(props) {\n  var navRef = useRef();\n  var isAuth = useSelector(function (state) {\n    return !!state.auth.token;\n  });\n  useEffect(function () {\n    if (!isAuth) {\n      navRef.current.dispatch(NavigationActions.navigate({\n        routeName: \"Auth\"\n      }));\n    }\n  }, [isAuth]);\n  return _jsx(ShopNavigator, {\n    ref: navRef\n  });\n};\n\nexport default NavigationContainer;","map":{"version":3,"sources":["/Users/user/React-Native/sec 11 Authentication/navigation/NavigationContainer.js"],"names":["React","useEffect","useRef","useSelector","NavigationActions","ShopNavigator","NavigationContainer","props","navRef","isAuth","state","auth","token","current","dispatch","navigate","routeName"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,OAAOC,aAAP;;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AACrC,MAAMC,MAAM,GAAGN,MAAM,EAArB;AACA,MAAMO,MAAM,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAW,CAAC,CAACA,KAAK,CAACC,IAAN,CAAWC,KAAxB;AAAA,GAAD,CAA1B;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACQ,MAAL,EAAa;AACXD,MAAAA,MAAM,CAACK,OAAP,CAAeC,QAAf,CACEV,iBAAiB,CAACW,QAAlB,CAA2B;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAA3B,CADF;AAGD;AACF,GANQ,EAMN,CAACP,MAAD,CANM,CAAT;AAQA,SAAO,KAAC,aAAD;AAAe,IAAA,GAAG,EAAED;AAApB,IAAP;AACD,CAbD;;AAeA,eAAeF,mBAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NavigationActions } from \"react-navigation\";\n\nimport ShopNavigator from \"./ShopNavigator\";\n\nconst NavigationContainer = (props) => {\n  const navRef = useRef();\n  const isAuth = useSelector((state) => !!state.auth.token);\n\n  useEffect(() => {\n    if (!isAuth) {\n      navRef.current.dispatch(\n        NavigationActions.navigate({ routeName: \"Auth\" })\n      );\n    }\n  }, [isAuth]);\n\n  return <ShopNavigator ref={navRef} />;\n};\n\nexport default NavigationContainer;\n"]},"metadata":{},"sourceType":"module"}