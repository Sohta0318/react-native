{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {},\n    children: _jsxs(View, {\n      style: styles.screen,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Start a New Game!\"\n      }), _jsxs(Card, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          children: \"Select a Number\"\n        }), _jsx(Input, {\n          style: styles.input,\n          blurOnSubmit: true,\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          keyboardType: \"number-pad\",\n          maxLength: 2,\n          onChangeText: numberInputHandler,\n          value: enteredValue\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(View, {\n            style: styles.button,\n            children: _jsx(Button, {\n              title: \"Reset\",\n              onPress: function onPress() {},\n              color: Colors.accent\n            })\n          }), _jsx(View, {\n            style: styles.button,\n            children: _jsx(Button, {\n              title: \"Confirm\",\n              onPress: function onPress() {},\n              color: Colors.primary\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: \"80%\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15\n  },\n  button: {\n    width: 100\n  },\n  input: {\n    width: 50,\n    textAlign: \"center\"\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["/Users/user/sec4/screens/StartGameScreen.js"],"names":["React","useState","Card","Colors","Input","StartGameScreen","props","enteredValue","setEnteredValue","numberInputHandler","inputText","replace","styles","screen","title","inputContainer","input","buttonContainer","button","accent","primary","StyleSheet","create","flex","padding","alignItems","fontSize","marginVertical","width","maxWidth","flexDirection","justifyContent","paddingHorizontal","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Text, Button } from \"react-native\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\nimport { TouchableWithoutFeedback } from \"react-native-web\";\n\nconst StartGameScreen = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n\n  const numberInputHandler = (inputText) => {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n  return (\n    <TouchableWithoutFeedback onPress={() => {}}>\n      <View style={styles.screen}>\n        <Text style={styles.title}>Start a New Game!</Text>\n        <Card style={styles.inputContainer}>\n          <Text>Select a Number</Text>\n          <Input\n            style={styles.input}\n            blurOnSubmit\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            keyboardType=\"number-pad\"\n            maxLength={2}\n            onChangeText={numberInputHandler}\n            value={enteredValue}\n          />\n          <View style={styles.buttonContainer}>\n            <View style={styles.button}>\n              <Button title=\"Reset\" onPress={() => {}} color={Colors.accent} />\n            </View>\n            <View style={styles.button}>\n              <Button\n                title=\"Confirm\"\n                onPress={() => {}}\n                color={Colors.primary}\n              />\n            </View>\n          </View>\n        </Card>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\",\n  },\n  title: { fontSize: 20, marginVertical: 10 },\n  inputContainer: {\n    width: 300,\n    maxWidth: \"80%\",\n    alignItems: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15,\n  },\n  button: {\n    width: 100,\n  },\n  input: {\n    width: 50,\n    textAlign: \"center\",\n  },\n});\nexport default StartGameScreen;\n"]},"metadata":{},"sourceType":"module"}