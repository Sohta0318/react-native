{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Colors from \"../../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProductItem = function ProductItem(props) {\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === \"android\" && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  return _jsx(View, {\n    style: styles.product,\n    children: _jsxs(TouchableCmp, {\n      onPress: props.onViewDetail,\n      useForeground: true,\n      children: [_jsx(View, {\n        style: styles.imageContainer,\n        children: _jsx(Image, {\n          style: styles.image,\n          source: {\n            uri: props.image\n          }\n        })\n      }), _jsxs(View, {\n        style: styles.details,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: props.title\n        }), _jsxs(Text, {\n          style: styles.price,\n          children: [\"$\", props.price.toFixed(2)]\n        })]\n      }), _jsxs(View, {\n        style: styles.actions,\n        children: [_jsx(Button, {\n          color: Colors.primary,\n          title: \"View Details\",\n          onPress: props.onViewDetail\n        }), _jsx(Button, {\n          color: Colors.primary,\n          title: \"To Cart\",\n          onPress: props.onAddToCart\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  product: {\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 5,\n    borderRadius: 10,\n    backgroundColor: \"white\",\n    height: 300,\n    margin: 20\n  },\n  imageContainer: {\n    width: \"100%\",\n    height: \"60%\",\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    overflow: \"hidden\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  details: {\n    alignItems: \"center\",\n    height: \"15%\",\n    padding: 10\n  },\n  title: {\n    fontSize: 18,\n    marginVertical: 4\n  },\n  price: {\n    fontSize: 14,\n    color: \"#888\"\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: \"25%\",\n    paddingHorizontal: 20\n  }\n});\nexport default ProductItem;","map":{"version":3,"sources":["/Users/user/React-Native/sec8/components/shop/ProductItem.js"],"names":["React","Colors","ProductItem","props","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","styles","product","onViewDetail","imageContainer","image","uri","details","title","price","toFixed","actions","primary","onAddToCart","StyleSheet","create","shadowColor","shadowOpacity","shadowOffset","width","height","shadowRadius","elevation","borderRadius","backgroundColor","margin","borderTopLeftRadius","borderTopRightRadius","overflow","alignItems","padding","fontSize","marginVertical","color","flexDirection","justifyContent","paddingHorizontal"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;AAYA,OAAOC,MAAP;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,MAAIC,YAAY,GAAGC,gBAAnB;;AAEA,MAAIC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BD,QAAQ,CAACE,OAAT,IAAoB,EAArD,EAAyD;AACvDJ,IAAAA,YAAY,GAAGK,uBAAf;AACD;;AACD,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,OAApB;AAAA,cACE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAER,KAAK,CAACS,YAA7B;AAA2C,MAAA,aAAa,MAAxD;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,cAApB;AAAA,kBACE,KAAC,KAAD;AAAO,UAAA,KAAK,EAAEH,MAAM,CAACI,KAArB;AAA4B,UAAA,MAAM,EAAE;AAAEC,YAAAA,GAAG,EAAEZ,KAAK,CAACW;AAAb;AAApC;AADF,QADF,EAIE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACM,OAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACO,KAApB;AAAA,oBAA4Bd,KAAK,CAACc;AAAlC,UADF,EAEE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEP,MAAM,CAACQ,KAApB;AAAA,0BAA6Bf,KAAK,CAACe,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAA7B;AAAA,UAFF;AAAA,QAJF,EAQE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,OAApB;AAAA,mBACE,KAAC,MAAD;AACE,UAAA,KAAK,EAAEnB,MAAM,CAACoB,OADhB;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,OAAO,EAAElB,KAAK,CAACS;AAHjB,UADF,EAME,KAAC,MAAD;AACE,UAAA,KAAK,EAAEX,MAAM,CAACoB,OADhB;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAElB,KAAK,CAACmB;AAHjB,UANF;AAAA,QARF;AAAA;AADF,IADF;AAyBD,CA/BD;;AAiCA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,OAAO,EAAE;AACPc,IAAAA,WAAW,EAAE,OADN;AAEPC,IAAAA,aAAa,EAAE,IAFR;AAGPC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAHP;AAIPC,IAAAA,YAAY,EAAE,CAJP;AAKPC,IAAAA,SAAS,EAAE,CALJ;AAMPC,IAAAA,YAAY,EAAE,EANP;AAOPC,IAAAA,eAAe,EAAE,OAPV;AAQPJ,IAAAA,MAAM,EAAE,GARD;AASPK,IAAAA,MAAM,EAAE;AATD,GADsB;AAY/BrB,EAAAA,cAAc,EAAE;AACde,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,MAAM,EAAE,KAFM;AAGdM,IAAAA,mBAAmB,EAAE,EAHP;AAIdC,IAAAA,oBAAoB,EAAE,EAJR;AAKdC,IAAAA,QAAQ,EAAE;AALI,GAZe;AAmB/BvB,EAAAA,KAAK,EAAE;AACLc,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GAnBwB;AAuB/Bb,EAAAA,OAAO,EAAE;AACPsB,IAAAA,UAAU,EAAE,QADL;AAEPT,IAAAA,MAAM,EAAE,KAFD;AAGPU,IAAAA,OAAO,EAAE;AAHF,GAvBsB;AA4B/BtB,EAAAA,KAAK,EAAE;AACLuB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,cAAc,EAAE;AAFX,GA5BwB;AAgC/BvB,EAAAA,KAAK,EAAE;AACLsB,IAAAA,QAAQ,EAAE,EADL;AAELE,IAAAA,KAAK,EAAE;AAFF,GAhCwB;AAoC/BtB,EAAAA,OAAO,EAAE;AACPuB,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,cAAc,EAAE,eAFT;AAGPN,IAAAA,UAAU,EAAE,QAHL;AAIPT,IAAAA,MAAM,EAAE,KAJD;AAKPgB,IAAAA,iBAAiB,EAAE;AALZ;AApCsB,CAAlB,CAAf;AA6CA,eAAe3C,WAAf","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Button,\n  TouchableOpacity,\n  TouchableNativeFeedback,\n  Platform,\n} from \"react-native\";\n\nimport Colors from \"../../constants/Colors\";\n\nconst ProductItem = (props) => {\n  let TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === \"android\" && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n  return (\n    <View style={styles.product}>\n      <TouchableCmp onPress={props.onViewDetail} useForeground>\n        <View style={styles.imageContainer}>\n          <Image style={styles.image} source={{ uri: props.image }} />\n        </View>\n        <View style={styles.details}>\n          <Text style={styles.title}>{props.title}</Text>\n          <Text style={styles.price}>${props.price.toFixed(2)}</Text>\n        </View>\n        <View style={styles.actions}>\n          <Button\n            color={Colors.primary}\n            title=\"View Details\"\n            onPress={props.onViewDetail}\n          />\n          <Button\n            color={Colors.primary}\n            title=\"To Cart\"\n            onPress={props.onAddToCart}\n          />\n        </View>\n      </TouchableCmp>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  product: {\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 5,\n    borderRadius: 10,\n    backgroundColor: \"white\",\n    height: 300,\n    margin: 20,\n  },\n  imageContainer: {\n    width: \"100%\",\n    height: \"60%\",\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    overflow: \"hidden\",\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  details: {\n    alignItems: \"center\",\n    height: \"15%\",\n    padding: 10,\n  },\n  title: {\n    fontSize: 18,\n    marginVertical: 4,\n  },\n  price: {\n    fontSize: 14,\n    color: \"#888\",\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: \"25%\",\n    paddingHorizontal: 20,\n  },\n});\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}