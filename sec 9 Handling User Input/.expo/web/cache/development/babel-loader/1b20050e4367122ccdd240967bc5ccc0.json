{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { getDefaultSpaceAboveMenu } from \"./statusBarUtils\";\nimport { Menu } from \"./vendor/Menu\";\nimport { useTheme } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var OVERFLOW_TOP = 15;\n\nvar warn = function warn() {\n  console.warn('It seems like you tried to open the overflow menu using the overflowMenuPressHandlerDropdownMenu' + ' - which is the default handler on android - but you forgot to wrap your root component in <OverflowMenuProvider />.' + 'Please check the installation instructions in the react-navigation-header-buttons readme!');\n};\n\nexport var OverflowMenuContext = React.createContext(warn);\nexport var OverflowMenuProvider = function OverflowMenuProvider(_ref) {\n  var children = _ref.children,\n      spaceAboveMenu = _ref.spaceAboveMenu;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    x: Dimensions.get('window').width - 10,\n    y: 40\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      position = _React$useState4[0],\n      setPosition = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      elements = _React$useState6[0],\n      setElements = _React$useState6[1];\n\n  var _useTheme = useTheme(),\n      card = _useTheme.colors.card;\n\n  var hideMenu = React.useCallback(function () {\n    setVisible(false);\n  }, []);\n  var toggleMenu = React.useCallback(function (params) {\n    setElements((params == null ? void 0 : params.elements) || []);\n\n    if (params) {\n      var x = params.x,\n          y = params.y;\n      var extraDelta = spaceAboveMenu != null ? spaceAboveMenu : getDefaultSpaceAboveMenu();\n      setPosition({\n        x: x,\n        y: y + extraDelta\n      });\n    }\n\n    setVisible(function (prevVisible) {\n      return !prevVisible;\n    });\n  }, [spaceAboveMenu]);\n  return _jsxs(OverflowMenuContext.Provider, {\n    value: toggleMenu,\n    children: [React.Children.only(children), _jsx(Menu, {\n      visible: visible,\n      onDismiss: hideMenu,\n      anchor: position,\n      contentStyle: {\n        backgroundColor: card\n      },\n      children: elements\n    })]\n  });\n};","map":{"version":3,"sources":["/Users/user/React-Native/sec 9 Handling User Input/node_modules/react-navigation-header-buttons/src/overflowMenu/OverflowMenuContext.js"],"names":["React","getDefaultSpaceAboveMenu","Menu","useTheme","OVERFLOW_TOP","warn","console","OverflowMenuContext","createContext","OverflowMenuProvider","children","spaceAboveMenu","useState","visible","setVisible","x","Dimensions","get","width","y","position","setPosition","elements","setElements","card","colors","hideMenu","useCallback","toggleMenu","params","extraDelta","prevVisible","Children","only","backgroundColor"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,wBAAT;AACA,SAASC,IAAT;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;AAQA,OAAO,IAAMC,YAAY,GAAG,EAArB;;AAEP,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEjBC,EAAAA,OAAO,CAACD,IAAR,CACE,qGACE,sHADF,GAEE,2FAHJ;AAKD,CAPD;;AAQA,OAAO,IAAME,mBAAwB,GAAGP,KAAK,CAACQ,aAAN,CAA+CH,IAA/C,CAAjC;AAOP,OAAO,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,OAGqB;AAAA,MAFvDC,QAEuD,QAFvDA,QAEuD;AAAA,MADvDC,cACuD,QADvDA,cACuD;;AACvD,wBAA8BX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,yBAAgCd,KAAK,CAACY,QAAN,CAAe;AAAEG,IAAAA,CAAC,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,EAAtC;AAA0CC,IAAAA,CAAC,EAAE;AAA7C,GAAf,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,yBAAgCrB,KAAK,CAACY,QAAN,CAAe,IAAf,CAAhC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AACA,kBAEIpB,QAAQ,EAFZ;AAAA,MACYqB,IADZ,aACEC,MADF,CACYD,IADZ;;AAIA,MAAME,QAAQ,GAAG1B,KAAK,CAAC2B,WAAN,CAAkB,YAAM;AACvCb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFgB,EAEd,EAFc,CAAjB;AAIA,MAAMc,UAAU,GAAG5B,KAAK,CAAC2B,WAAN,CACjB,UAACE,MAAD,EAA6B;AAC3BN,IAAAA,WAAW,CAAC,CAAAM,MAAM,QAAN,YAAAA,MAAM,CAAEP,QAAR,KAAoB,EAArB,CAAX;;AACA,QAAIO,MAAJ,EAAY;AACV,UAAQd,CAAR,GAAiBc,MAAjB,CAAQd,CAAR;AAAA,UAAWI,CAAX,GAAiBU,MAAjB,CAAWV,CAAX;AACA,UAAMW,UAAU,GAAGnB,cAAH,WAAGA,cAAH,GAAqBV,wBAAwB,EAA7D;AACAoB,MAAAA,WAAW,CAAC;AAAEN,QAAAA,CAAC,EAADA,CAAF;AAAKI,QAAAA,CAAC,EAAEA,CAAC,GAAGW;AAAZ,OAAD,CAAX;AACD;;AACDhB,IAAAA,UAAU,CAAC,UAACiB,WAAD;AAAA,aAAiB,CAACA,WAAlB;AAAA,KAAD,CAAV;AACD,GATgB,EAUjB,CAACpB,cAAD,CAViB,CAAnB;AAaA,SACE,MAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEiB,UAArC;AAAA,eACG5B,KAAK,CAACgC,QAAN,CAAeC,IAAf,CAAoBvB,QAApB,CADH,EAEE,KAAC,IAAD;AACE,MAAA,OAAO,EAAEG,OADX;AAEE,MAAA,SAAS,EAAEa,QAFb;AAGE,MAAA,MAAM,EAAEN,QAHV;AAIE,MAAA,YAAY,EAAE;AAAEc,QAAAA,eAAe,EAAEV;AAAnB,OAJhB;AAAA,gBAMGF;AANH,MAFF;AAAA,IADF;AAaD,CAzCM","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport { getDefaultSpaceAboveMenu } from './statusBarUtils';\nimport { Menu } from './vendor/Menu';\nimport { useTheme } from '@react-navigation/native';\n\nexport type ToggleMenuParam = ?{\n  elements: React.ChildrenArray<any>,\n  x: number,\n  y: number,\n};\n\nexport const OVERFLOW_TOP = 15;\n\nconst warn = () => {\n  // the noop value will be replaced by OverflowMenuProvider rendered in app root\n  console.warn(\n    'It seems like you tried to open the overflow menu using the overflowMenuPressHandlerDropdownMenu' +\n      ' - which is the default handler on android - but you forgot to wrap your root component in <OverflowMenuProvider />.' +\n      'Please check the installation instructions in the react-navigation-header-buttons readme!'\n  );\n};\nexport const OverflowMenuContext: any = React.createContext<(ToggleMenuParam) => void>(warn);\n\ntype Props = {\n  children: React.Element<any>,\n  spaceAboveMenu?: number,\n};\n\nexport const OverflowMenuProvider = ({\n  children,\n  spaceAboveMenu,\n}: Props): React.Element<typeof OverflowMenuProvider> => {\n  const [visible, setVisible] = React.useState(false);\n  const [position, setPosition] = React.useState({ x: Dimensions.get('window').width - 10, y: 40 });\n  const [elements, setElements] = React.useState(null);\n  const {\n    colors: { card },\n  } = useTheme();\n\n  const hideMenu = React.useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  const toggleMenu = React.useCallback(\n    (params: ToggleMenuParam) => {\n      setElements(params?.elements || []);\n      if (params) {\n        const { x, y } = params;\n        const extraDelta = spaceAboveMenu ?? getDefaultSpaceAboveMenu();\n        setPosition({ x, y: y + extraDelta });\n      }\n      setVisible((prevVisible) => !prevVisible);\n    },\n    [spaceAboveMenu]\n  );\n\n  return (\n    <OverflowMenuContext.Provider value={toggleMenu}>\n      {React.Children.only(children)}\n      <Menu\n        visible={visible}\n        onDismiss={hideMenu}\n        anchor={position}\n        contentStyle={{ backgroundColor: card }}\n      >\n        {elements}\n      </Menu>\n    </OverflowMenuContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}